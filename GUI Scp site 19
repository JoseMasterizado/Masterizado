local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

-- Limpia GUI previa
if PlayerGui:FindFirstChild("CustomExploitGUI") then
    PlayerGui.CustomExploitGUI:Destroy()
end

-- Crear ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomExploitGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

-- Colores
local ColorMain = Color3.fromRGB(173, 216, 230) -- azul clarito
local ColorAccent = Color3.fromRGB(0, 170, 255)
local ColorActiveGreen = Color3.fromRGB(0, 255, 0)
local ColorInactiveGrey = Color3.fromRGB(90, 90, 90)
local ColorRed = Color3.fromRGB(255, 0, 0)
local ColorWhite = Color3.fromRGB(255, 255, 255)

-- Función para crear botones
local function createButton(parent, text, position, size)
    local btn = Instance.new("TextButton")
    btn.Parent = parent
    btn.Text = text
    btn.Position = position
    btn.Size = size
    btn.BackgroundColor3 = ColorInactiveGrey
    btn.TextColor3 = Color3.new(1,1,1)
    btn.TextScaled = true
    btn.Active = true
    btn.AutoButtonColor = false
    btn.BorderSizePixel = 0
    btn.Font = Enum.Font.SourceSansBold
    btn.ZIndex = 2
    return btn
end

-- Función para crear labels
local function createLabel(parent, text, position, size, color)
    local label = Instance.new("TextLabel")
    label.Parent = parent
    label.Text = text
    label.Position = position
    label.Size = size
    label.BackgroundTransparency = 1
    label.TextColor3 = color or Color3.new(1,1,1)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.ZIndex = 2
    return label
end

-- Función para crear InputBox (TextBox) con estilo
local function createInputBox(parent, placeholder, position, size, default)
    local tb = Instance.new("TextBox")
    tb.Parent = parent
    tb.PlaceholderText = placeholder or ""
    tb.Position = position
    tb.Size = size
    tb.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    tb.TextColor3 = Color3.new(0, 0, 0)
    tb.Text = default or ""
    tb.TextScaled = false
    tb.Font = Enum.Font.SourceSans
    tb.TextWrapped = true
    tb.ClearTextOnFocus = false
    tb.ZIndex = 2
    tb.TextEditable = true
    return tb
end

-- Contenedor principal Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 480, 0, 370)
MainFrame.Position = UDim2.new(0.5, -240, 0.5, -185)
MainFrame.BackgroundColor3 = ColorMain
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

-- Botón minimizar/maximizar
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Parent = MainFrame
MinimizeButton.Size = UDim2.new(0, 50, 0, 30)
MinimizeButton.Position = UDim2.new(1, -55, 0, 10)
MinimizeButton.BackgroundColor3 = ColorAccent
MinimizeButton.TextColor3 = Color3.new(1,1,1)
MinimizeButton.TextScaled = true
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.BorderSizePixel = 0
MinimizeButton.ZIndex = 5

local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    if not isMinimized then
        for _, child in pairs(MainFrame:GetChildren()) do
            if child ~= MinimizeButton and child.Name ~= "TopBar" then
                child.Visible = false
            end
        end
        MainFrame.Size = UDim2.new(0, 480, 0, 50)
        MinimizeButton.Text = "+"
        isMinimized = true
    else
        for _, child in pairs(MainFrame:GetChildren()) do
            child.Visible = true
        end
        MainFrame.Size = UDim2.new(0, 480, 0, 370)
        MinimizeButton.Text = "-"
        isMinimized = false
    end
end)

-- Barra superior con avatar, nombre y status activo
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Size = UDim2.new(1, 0, 0, 50)
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.BackgroundColor3 = ColorAccent
TopBar.BorderSizePixel = 0
TopBar.Parent = MainFrame

local StatusLabel = createLabel(TopBar, "ACTIVO", UDim2.new(0.02, 0, 0.15, 0), UDim2.new(0, 80, 0, 30), ColorActiveGreen)
StatusLabel.TextStrokeTransparency = 0.5

local PlayerNameLabel = createLabel(TopBar, LocalPlayer.Name, UDim2.new(0.20, 0, 0.15, 0), UDim2.new(0, 200, 0, 30), Color3.new(1,1,1))

local AvatarImage = Instance.new("ImageLabel")
AvatarImage.Parent = TopBar
AvatarImage.Size = UDim2.new(0, 40, 0, 40)
AvatarImage.Position = UDim2.new(0.90, -50, 0.10, 0)
AvatarImage.BackgroundTransparency = 1
AvatarImage.Image = "rbxthumb://type=AvatarHeadShot&id=".. LocalPlayer.UserId.."&w=420&h=420"
AvatarImage.ZIndex = 2

local TabBar = Instance.new("Frame")
TabBar.Size = UDim2.new(1, 0, 0, 35)
TabBar.Position = UDim2.new(0, 0, 0, 50)
TabBar.BackgroundColor3 = ColorAccent
TabBar.BorderSizePixel = 0
TabBar.Parent = MainFrame

local Tabs = {"Game", "Visual", "Silent Aim"}
local TabButtons = {}
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -10, 1, -90)
ContentFrame.Position = UDim2.new(0, 5, 0, 90)
ContentFrame.BackgroundColor3 = Color3.fromRGB(240,240,240)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame

local Pages = {}
for i, tabName in ipairs(Tabs) do
    local frame = Instance.new("Frame")
    frame.Name = tabName .. "Page"
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.Visible = (i == 1)
    frame.Parent = ContentFrame
    Pages[tabName] = frame

    local btn = createButton(TabBar, tabName, UDim2.new((i-1)*0.33, 0, 0, 0), UDim2.new(0.33, 0, 1, 0))
    if i == 1 then
        btn.BackgroundColor3 = ColorWhite
        btn.TextColor3 = ColorRed
    else
        btn.BackgroundColor3 = ColorAccent
        btn.TextColor3 = Color3.new(1,1,1)
    end
    btn.ZIndex = 3

    btn.MouseButton1Click:Connect(function()
        for _, b in pairs(TabButtons) do
            b.BackgroundColor3 = ColorAccent
            b.TextColor3 = Color3.new(1,1,1)
        end
        btn.BackgroundColor3 = ColorWhite
        btn.TextColor3 = ColorRed

        for name, page in pairs(Pages) do
            page.Visible = false
        end
        Pages[tabName].Visible = true
    end)

    table.insert(TabButtons, btn)
end

-- SECCION GAME --
local GamePage = Pages["Game"]
local yStart, yGap = 10, 65
local yGap2, yGap3, yGap4 = yGap*2, yGap*3, yGap*4

local shotCount = 3
local infiniteAmmoValue = 999
local speedValue = 41
local rapidFireValue = 99999

local oneShotEnabled, infiniteAmmoEnabled, speedHackEnabled = false, false, false
local rapidFireEnabled, openDoorsEnabled = false, false

-- One Shot
local oneShotLabel = createLabel(GamePage, "One Shot - Insta Kill", UDim2.new(0, 10, 0, yStart), UDim2.new(0, 200, 0, 30))
local oneShotToggle = createButton(GamePage, "OFF", UDim2.new(0, 220, 0, yStart), UDim2.new(0, 80, 0, 30))
local oneShotValueInput = createInputBox(GamePage, "Shot Count (2-100)", UDim2.new(0, 310, 0, yStart), UDim2.new(0, 80, 0, 30), tostring(shotCount))

oneShotToggle.MouseButton1Click:Connect(function()
    oneShotEnabled = not oneShotEnabled
    oneShotToggle.Text = oneShotEnabled and "ON" or "OFF"
    oneShotToggle.BackgroundColor3 = oneShotEnabled and ColorActiveGreen or ColorInactiveGrey

    if oneShotEnabled then
        shotCount = tonumber(oneShotValueInput.Text) or 3
        shotCount = math.clamp(shotCount, 2, 100)

        local REMOTE_PATH  = "ReplicatedStorage.Events.RemoteEvent"
        local SHOT_COUNT = shotCount
        local Remote = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvent")
        assert(Remote:GetFullName() == REMOTE_PATH, "Ruta incorrecta; ajusta REMOTE_PATH.")

        local mt  = getrawmetatable(game)
        setreadonly(mt, false)
        local old = mt.__namecall

        mt.__namecall = newcclosure(function(self, ...)
            if self == Remote and getnamecallmethod() == "FireServer" and oneShotEnabled then
                local args = {...}
                for i=1, SHOT_COUNT-1 do
                    old(self, table.unpack(args))
                end
                return old(self, table.unpack(args))
            end
            return old(self, ...)
        end)
        setreadonly(mt, true)
    end
end)

oneShotValueInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(oneShotValueInput.Text)
        if val then
            shotCount = math.clamp(val, 2, 100)
            oneShotValueInput.Text = tostring(shotCount)
        else
            oneShotValueInput.Text = tostring(shotCount)
        end
    end
end)

-- Infinite Ammo
local ammoLabel = createLabel(GamePage, "Infinite Ammo", UDim2.new(0, 10, 0, yStart + yGap), UDim2.new(0, 200, 0, 30))
local ammoToggle = createButton(GamePage, "OFF", UDim2.new(0, 220, 0, yStart + yGap), UDim2.new(0, 80, 0, 30))
local ammoValueInput = createInputBox(GamePage, "Ammo (50-999)", UDim2.new(0, 310, 0, yStart + yGap), UDim2.new(0, 80, 0, 30), tostring(infiniteAmmoValue))

local ammoForceTask = nil

ammoToggle.MouseButton1Click:Connect(function()
    infiniteAmmoEnabled = not infiniteAmmoEnabled
    ammoToggle.Text = infiniteAmmoEnabled and "ON" or "OFF"
    ammoToggle.BackgroundColor3 = infiniteAmmoEnabled and ColorActiveGreen or ColorInactiveGrey

    if infiniteAmmoEnabled then
        infiniteAmmoValue = tonumber(ammoValueInput.Text) or 999
        infiniteAmmoValue = math.clamp(infiniteAmmoValue, 50, 999)
        ammoValueInput.Text = tostring(infiniteAmmoValue)

        local function getNetwork()
            for _, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "FireServer") and rawget(v, "InvokeServer") then
                    return v
                end
            end
        end

        local function getGunSettings()
            for _, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "Ammo") then
                    return v
                end
            end
        end

        local function forceReloadOnServer(Network)
            Network:FireServer("setToolState", "Reload")
            Network:FireServer("setToolState", "Reloaded")
        end

        local function forceAmmoInfinite()
            local Network = getNetwork()
            if not Network then
                warn("❌ No se encontró Network.")
                return
            end

            local gun_settings = getGunSettings()
            if not gun_settings then
                warn("❌ No se encontró tabla con Ammo.")
                return
            end

            if ammoForceTask then
                task.cancel(ammoForceTask)
            end

            ammoForceTask = task.spawn(function()
                while infiniteAmmoEnabled do
                    task.wait(1)
                    forceReloadOnServer(Network)
                    gun_settings.Ammo = infiniteAmmoValue
                end
            end)

            for _, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "_discharge") and type(v._discharge) == "function" then
                    local original = v._discharge
                    local hook
                    hook = hookfunction(original, function(self, ...)
                        if self.Ammo and self.Ammo <= 0 then
                            self.Ammo = infiniteAmmoValue
                            forceReloadOnServer(Network)
                            print("✅ Disparo forzado con ammo spoof")
                        end
                        return hook(self, ...)
                    end)
                end
            end

            print("✅ Munición infinita validada en cliente y servidor.")
        end

        forceAmmoInfinite()
    else
        if ammoForceTask then
            task.cancel(ammoForceTask)
            ammoForceTask = nil
        end
    end
end)

ammoValueInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(ammoValueInput.Text)
        if val then
            infiniteAmmoValue = math.clamp(val, 50, 999)
            ammoValueInput.Text = tostring(infiniteAmmoValue)
        else
            ammoValueInput.Text = tostring(infiniteAmmoValue)
        end
    end
end)

-- Speed Hack
local speedLabel = createLabel(GamePage, "Speed Hack", UDim2.new(0, 10, 0, yStart + yGap2), UDim2.new(0, 200, 0, 30))
local speedToggle = createButton(GamePage, "OFF", UDim2.new(0, 220, 0, yStart + yGap2), UDim2.new(0, 80, 0, 30))
local speedValueInput = createInputBox(GamePage, "Speed (16-999)", UDim2.new(0, 310, 0, yStart + yGap2), UDim2.new(0, 80, 0, 30), tostring(speedValue))

local speedTask = nil

speedToggle.MouseButton1Click:Connect(function()
    speedHackEnabled = not speedHackEnabled
    speedToggle.Text = speedHackEnabled and "ON" or "OFF"
    speedToggle.BackgroundColor3 = speedHackEnabled and ColorActiveGreen or ColorInactiveGrey

    if speedHackEnabled then
        speedValue = tonumber(speedValueInput.Text) or 41
        speedValue = math.clamp(speedValue, 16, 999)
        speedValueInput.Text = tostring(speedValue)

        if speedTask then
            speedTask:Disconnect()
            speedTask = nil
        end

        speedTask = RunService.RenderStepped:Connect(function()
            local char = LocalPlayer.Character
            if not char then return end

            local humanoid = char:FindFirstChildWhichIsA("Humanoid")
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not humanoid or not hrp then return end

            local moving = humanoid.MoveDirection.Magnitude > 0.1
            local isRunning = humanoid.WalkSpeed > 16

            if speedHackEnabled and moving and isRunning then
                hrp.Velocity = humanoid.MoveDirection.Unit * speedValue
            end
        end)
    else
        if speedTask then
            speedTask:Disconnect()
            speedTask = nil
        end
    end
end)

speedValueInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(speedValueInput.Text)
        if val then
            speedValue = math.clamp(val, 16, 999)
            speedValueInput.Text = tostring(speedValue)
        else
            speedValueInput.Text = tostring(speedValue)
        end
    end
end)

-- Rapid Fire
local rapidLabel = createLabel(GamePage, "Rapid Fire", UDim2.new(0, 10, 0, yStart + yGap3), UDim2.new(0, 200, 0, 30))
local rapidToggle = createButton(GamePage, "OFF", UDim2.new(0, 220, 0, yStart + yGap3), UDim2.new(0, 80, 0, 30))
local rapidValueInput = createInputBox(GamePage, "RPM (1-99999)", UDim2.new(0, 310, 0, yStart + yGap3), UDim2.new(0, 80, 0, 30), tostring(rapidFireValue))

local rapidFireHooked = false
rapidFireEnabled = false

rapidToggle.MouseButton1Click:Connect(function()
    rapidFireEnabled = not rapidFireEnabled
    rapidToggle.Text = rapidFireEnabled and "ON" or "OFF"
    rapidToggle.BackgroundColor3 = rapidFireEnabled and ColorActiveGreen or ColorInactiveGrey

    if rapidFireEnabled then
        rapidFireValue = tonumber(rapidValueInput.Text) or 99999
        rapidFireValue = math.clamp(rapidFireValue, 1, 99999)
        rapidValueInput.Text = tostring(rapidFireValue)

        for _,Table in next, getgc(true) do
            if type(Table) == 'table' and rawget(Table, "Ammo") and rawget(Table, "Rpm") then
                rawset(Table, "Rpm", rapidFireValue)
            end
        end
        rapidFireHooked = true
        print("Rapid Fire activado con RPM:", rapidFireValue)
    else
        if rapidFireHooked then
            for _,Table in next, getgc(true) do
                if type(Table) == 'table' and rawget(Table, "Ammo") and rawget(Table, "Rpm") then
                    rawset(Table, "Rpm", 600) 
                end
            end
            rapidFireHooked = false
            print("Rapid Fire desactivado.")
        end
    end
end)

rapidValueInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(rapidValueInput.Text)
        if val then
            rapidFireValue = math.clamp(val, 1, 99999)
            rapidValueInput.Text = tostring(rapidFireValue)
        else
            rapidValueInput.Text = tostring(rapidFireValue)
        end
    end
end)

-- Open Doors Script
local doorToggle = createButton(GamePage, "Open Doors: OFF", UDim2.new(0, 10, 0, yStart + yGap4), UDim2.new(0, 150, 0, 40))
openDoorsEnabled = false

doorToggle.MouseButton1Click:Connect(function()
    openDoorsEnabled = not openDoorsEnabled
    doorToggle.Text = openDoorsEnabled and "Open Doors: ON" or "Open Doors: OFF"
    doorToggle.BackgroundColor3 = openDoorsEnabled and ColorActiveGreen or ColorInactiveGrey

    if openDoorsEnabled then
        local network = nil
        local success, result = pcall(function() return getgc(true) end)
        if success then
            for _, v in next, result do
                if type(v) == 'table' and rawget(v, "FireServer") and rawget(v, "InvokeServer") then
                    network = v
                    break
                end
            end
        end

        if not network then
            warn("No se pudo encontrar el módulo 'network'.")
            return
        end

        local doorsOpenedCount = 0
        local doors = CollectionService:GetTagged("Door")
        for _, doorInstance in ipairs(doors) do
            local buttonsFolder = doorInstance:FindFirstChild("Buttons")
            if buttonsFolder then
                for _, buttonInst in ipairs(buttonsFolder:GetChildren()) do
                    local doorId = doorInstance:GetAttribute("Id")
                    if doorId then
                        pcall(function()
                            network:FireServer("interactWith", "Door", doorId, buttonInst.Name)
                            doorsOpenedCount = doorsOpenedCount + 1
                        end)
                    end
                end
            end
        end
        print("Puertas abiertas: " .. tostring(doorsOpenedCount))
    end
end)

-- SECCION VISUAL --
local VisualPage = Pages["Visual"]

local shopToggle = createButton(VisualPage, "Shop: OFF", UDim2.new(0, 10, 0, 10), UDim2.new(0, 100, 0, 40))
local shopVisible = false
local shopFrame = nil

local ShopItems = {
    ["Keycard Device"] = {Price = 750},
    ["Level 3"] = {Price = 500},
    ["Level 4"] = {Price = 1750},
    ["Level 5"] = {Price = 3000},
    ["Locker Keychain"] = {Price = 100},
    ["Kitchen Knife"] = {Price = 100},
    ["Glock 22"] = {Price = 150},
    ["P90"] = {Price = 350},
    ["P90s"] = {Price = 450},
    ["Honey Badger"] = {Price = 650},
    ["Kriss Vector"] = {Price = 1500},
    ["M16"] = {Price = 3750}
}

local function createShop()
    if shopFrame then
        shopFrame:Destroy()
        shopFrame = nil
    end

    shopFrame = Instance.new("Frame")
    shopFrame.Size = UDim2.new(0, 250, 0, 300)
    shopFrame.Position = UDim2.new(0.5, -125, 0.5, -150)
    shopFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    shopFrame.BorderSizePixel = 0
    shopFrame.Parent = VisualPage
    shopFrame.Visible = false
    shopFrame.Active = true
    shopFrame.Draggable = true

    local title = createLabel(shopFrame, "🛒 Shop Items", UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 30), Color3.fromRGB(255,255,255))
    title.BackgroundColor3 = Color3.fromRGB(60,60,60)
    title.BackgroundTransparency = 0

    local scroll = Instance.new("ScrollingFrame")
    scroll.Size = UDim2.new(1, 0, 1, -30)
    scroll.Position = UDim2.new(0, 0, 0, 30)
    scroll.ScrollBarThickness = 6
    scroll.BackgroundTransparency = 1
    scroll.ScrollingEnabled = true
    scroll.Active = true
    scroll.Parent = shopFrame

    local UIList = Instance.new("UIListLayout")
    UIList.Parent = scroll
    UIList.SortOrder = Enum.SortOrder.LayoutOrder
    UIList.Padding = UDim.new(0, 3)

    -- Actualizar CanvasSize dinámicamente para scroll correcto en Android
    UIList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scroll.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y)
    end)

    scroll.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y)

    local Network = nil
    local function getNetwork()
        for _, v in next, getgc(true) do
            if typeof(v) == "table" and rawget(v, "FireServer") and rawget(v, "InvokeServer") then
                return v
            end
        end
    end
    Network = getNetwork()
    if not Network then
        warn("No se encontró modulo Network.")
        return
    end

    for itemName, info in pairs(ShopItems) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, -8, 0, 30)
        btn.BackgroundColor3 = Color3.fromRGB(45,45,45)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.TextScaled = true
        btn.Text = itemName .. " - $" .. tostring(info.Price)
        btn.Parent = scroll
        btn.MouseButton1Click:Connect(function()
            pcall(function()
                Network:InvokeServer("PurchaseItem", itemName)
                print("Intentando comprar: ".. itemName)
            end)
        end)
    end

    return shopFrame
end

shopFrame = createShop()

shopToggle.MouseButton1Click:Connect(function()
    shopVisible = not shopVisible
    shopToggle.Text = shopVisible and "Shop: ON" or "Shop: OFF"
    shopToggle.BackgroundColor3 = shopVisible and ColorActiveGreen or ColorInactiveGrey
    if shopFrame then
        shopFrame.Visible = shopVisible
    end
end)

local deleteStockBtn = createButton(VisualPage, "Delete Stock (once)", UDim2.new(0, 130, 0, 10), UDim2.new(0, 150, 0, 40))
deleteStockBtn.BackgroundColor3 = ColorInactiveGrey
local deleteStockOn = false

deleteStockBtn.MouseButton1Click:Connect(function()
    if deleteStockOn then return end
    deleteStockOn = true
    deleteStockBtn.BackgroundColor3 = ColorActiveGreen

    local ShopItemsTable = nil
    for _, obj in ipairs(getgc(true)) do
        if type(obj) == "table" and rawget(obj, "P90s") then
            ShopItemsTable = obj
            break
        end
    end

    if ShopItemsTable and ShopItemsTable["P90s"] then
        local item = ShopItemsTable["P90s"]
        item.Stock = math.huge
        item.Limited = false
        item.CanPurchase = true
        print("[✔] P90s modificada: stock infinito y sin limitación.")
    else
        warn("[✘] No se encontró la tabla ShopItems con la P90s.")
    end
end)

local vigilanciaLabel = createLabel(VisualPage, "Tabla Vigilancia", UDim2.new(0, 10, 0, 80), UDim2.new(0, 200, 0, 30))
local vigilanciaToggle = createButton(VisualPage, "OFF", UDim2.new(0, 220, 0, 80), UDim2.new(0, 80, 0, 30))

local vigilanciaOn = false
local vigilanciaGui = nil

vigilanciaToggle.MouseButton1Click:Connect(function()
    vigilanciaOn = not vigilanciaOn
    vigilanciaToggle.Text = vigilanciaOn and "ON" or "OFF"
    vigilanciaToggle.BackgroundColor3 = vigilanciaOn and ColorActiveGreen or ColorInactiveGrey

    if vigilanciaOn then
        if vigilanciaGui then
            vigilanciaGui.Enabled = true
            return
        end

        local vigilados = {
            "arthurborgez", "tasgerr", "dj11o9er", "JamesWan2007",
            "peacefulsolstice", "kylekyle200", "Check_2XK", "theoryxix",
            "swen8910", "drplaguewgf", "fritsgelard", "retainroxolB2",
            "C_araxes", "sirmcoofie", "princessmelony6780", "ev2005xxx"
        }
        local vigiladosMap = {}
        for _, name in ipairs(vigilados) do
            vigiladosMap[name:lower()] = true
        end

        vigilanciaGui = Instance.new("ScreenGui")
        vigilanciaGui.Name = "SistemaVigilancia"
        vigilanciaGui.ResetOnSpawn = false
        vigilanciaGui.Parent = PlayerGui

        local frame = Instance.new("Frame")
        frame.Position = UDim2.new(1, -160, 0, 60)
        frame.Size = UDim2.new(0, 150, 0, 20)
        frame.BackgroundTransparency = 0.3
        frame.BackgroundColor3 = Color3.new(0, 0, 0)
        frame.BorderSizePixel = 0
        frame.Active = true
        frame.Draggable = true
        frame.Parent = vigilanciaGui

        local title = Instance.new("TextLabel")
        title.Size = UDim2.new(1, 0, 0, 20)
        title.BackgroundTransparency = 1
        title.Text = "Vigilancia conectados"
        title.Font = Enum.Font.SourceSansBold
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.TextSize = 14
        title.Parent = frame

        local etiquetas = {}
        local estadoUsuarios = {}
        local totalVisuales = 0

        local function mostrarAlerta(texto, color)
            local alerta = Instance.new("TextLabel")
            alerta.Size = UDim2.new(0, 250, 0, 30)
            alerta.Position = UDim2.new(0.5, -125, 0, 10)
            alerta.BackgroundColor3 = color
            alerta.BackgroundTransparency = 0.1
            alerta.TextColor3 = Color3.new(1, 1, 1)
            alerta.TextStrokeTransparency = 0.5
            alerta.Text = texto
            alerta.Font = Enum.Font.SourceSansBold
            alerta.TextSize = 20
            alerta.ZIndex = 2
            alerta.Parent = vigilanciaGui
            game:GetService("Debris"):AddItem(alerta, 3)
        end

        local function agregarJugador(player)
            local nombreLower = player.Name:lower()
            if vigiladosMap[nombreLower] and not etiquetas[nombreLower] then
                totalVisuales += 1
                local y = 20 + (totalVisuales - 1) * 16
                local label = Instance.new("TextLabel")
                label.Position = UDim2.new(0, 0, 0, y)
                label.Size = UDim2.new(1, 0, 0, 16)
                label.BackgroundTransparency = 1
                label.TextColor3 = Color3.fromRGB(0, 255, 0)
                label.Font = Enum.Font.SourceSans
                label.TextSize = 12
                label.Text = player.Name .. " - Conectado"
                label.Parent = frame
                etiquetas[nombreLower] = label
                estadoUsuarios[nombreLower] = true
                frame.Size = UDim2.new(0, 150, 0, 20 + totalVisuales * 16)
                mostrarAlerta("✔️ "..player.Name.." se conectó", Color3.fromRGB(0, 170, 0))
            end
        end

        local function quitarJugador(player)
            local nombreLower = player.Name:lower()
            if etiquetas[nombreLower] then
                etiquetas[nombreLower]:Destroy()
                etiquetas[nombreLower] = nil
                estadoUsuarios[nombreLower] = false
                totalVisuales -= 1
                local index = 0
                for _, label in pairs(etiquetas) do
                    label.Position = UDim2.new(0, 0, 0, 20 + index * 16)
                    index += 1
                end
                frame.Size = UDim2.new(0, 150, 0, 20 + totalVisuales * 16)
                mostrarAlerta("❌ " .. player.Name .. " se desconectó", Color3.fromRGB(170, 0, 0))
            end
        end

        for _, p in ipairs(Players:GetPlayers()) do
            agregarJugador(p)
        end

        Players.PlayerAdded:Connect(agregarJugador)
        Players.PlayerRemoving:Connect(quitarJugador)
    else
        if vigilanciaGui then
            vigilanciaGui.Enabled = false
        end
    end
end)

-- Infinity Yield toggle
local iyToggle = createButton(VisualPage, "Infinity Yield: OFF", UDim2.new(0, 10, 0, 130), UDim2.new(0, 170, 0, 40))
local iyLoaded = false

iyToggle.MouseButton1Click:Connect(function()
    if not iyLoaded then
        iyLoaded = true
        iyToggle.Text = "Infinity Yield: ON"
        iyToggle.BackgroundColor3 = ColorActiveGreen
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    else
        iyToggle.Text = "Infinity Yield: OFF"
        iyToggle.BackgroundColor3 = ColorInactiveGrey
    end
end)

-- SECCIÓN SILENT AIM --
local SilentPage = Pages["Silent Aim"]

local aimbotEnabled = false
local aimbotToggle = createButton(SilentPage, "Silent Aim: OFF", UDim2.new(0, 10, 0, 10), UDim2.new(0, 150, 0, 40))

aimbotToggle.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    aimbotToggle.Text = aimbotEnabled and "Silent Aim: ON" or "Silent Aim: OFF"
    aimbotToggle.BackgroundColor3 = aimbotEnabled and ColorActiveGreen or ColorInactiveGrey

    if aimbotEnabled then
        -- Inserta aquí el script completo de Silent Aim para activar
        print("Silent Aim ACTIVADO - Inserta el script completo para funcionar.")
    else
        print("Silent Aim DESACTIVADO. Reinicia el juego para restablecer.")
    end
end)

print("GUI personal para exploit Roblox cargada. Usa las pestañas para navegar y el botón en esquina superior derecha para minimizar/maximizar.")
